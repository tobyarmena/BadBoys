<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>meleeswipe=0
knockback = 0
delay = false;
image_speed = 0.3
spd = 0;
aimdir = 0;
damage = 0;

//chest
openingchest = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the sprite of each arm to the spell equipped
sprite_index = global.inventory[index,2]
//If there is no item, set the sprite to the default sprite
if sprite_index = spr_empty{sprite_index=spr_normal_arm}

//Perform attack actions when the player state is in free mode
if global.action = 1
    {
    
    //Point arms to crosshairs when shift is held down
    if keyboard_check(vk_shift) &amp;&amp; obj_player.mouse_dis = true
        {
        aimdir = point_direction(x,y,mouse_x,mouse_y);
        }
    else
        {
        aimdir = obj_player.direction;
        }
    //Perform the spell script based on which spell is equipped
    script_execute(global.inventory[index,5])

}

//Perform the actions of state 2
if global.action = 2
    {
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>meleeswipe=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.action = 1
{
x = obj_player.x+lengthdir_x(34,obj_player.direction+90*dir)+lengthdir_x(16+knockback,obj_player.direction);
y = obj_player.y+lengthdir_y(34,obj_player.direction+90*dir)+lengthdir_y(16+knockback,obj_player.direction);
if global.paused == true
    {
    x = x-view_xview[0];  
    y = y-view_yview[0];
    }
}
image_angle=aimdir;
draw_sprite_ext(sprite_index,image_index,x,y,1,dir,image_angle,c_white,1)
//draw_circle(x,y,1,true)

if global.action = 2 
    {
    if obj_player.actiondoor&lt;=3
        {
        x = obj_player.x+lengthdir_x(34,obj_player.direction+90*dir)+lengthdir_x(16+knockback,obj_player.direction)+lengthdir_x(obj_player.actiondoor*3,obj_player.direction);
        y = obj_player.y+lengthdir_y(34,obj_player.direction+90*dir)+lengthdir_y(16+knockback,obj_player.direction)+lengthdir_y(obj_player.actiondoor*3,obj_player.direction);
        }
    if obj_player.actiondoor&gt;=4
        {
        x = obj_player.x+lengthdir_x(34,obj_player.direction+90*dir)+lengthdir_x(16+knockback,obj_player.direction)+lengthdir_x(9-obj_player.actiondoor,obj_player.direction);
        y = obj_player.y+lengthdir_y(34,obj_player.direction+90*dir)+lengthdir_y(16+knockback,obj_player.direction)+lengthdir_y(9-obj_player.actiondoor,obj_player.direction);
        }
    
    }
    




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
